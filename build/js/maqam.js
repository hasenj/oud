// Generated by CoffeeScript 1.4.0
(function() {
  var ABCNotes, Jins, NoteName, ScaleArabicName, maqam_names_map, note_names_map;

  ABCNotes = "A B C D E F G".split(" ");

  window.stdNoteNames = ABCNotes;

  note_names_map = {
    A: "لا",
    B: "سي",
    C: "دو",
    D: "ري",
    E: "مي",
    F: "فا",
    G: "صول"
  };

  NoteName = (function() {

    function NoteName(name) {
      this.name = name;
      this.index = ABCNotes.indexOf(this.name);
    }

    NoteName.prototype.add = function(n) {
      return new NoteName(ABCNotes.at(this.index + n));
    };

    NoteName.prototype.next = function() {
      return this.add(1);
    };

    NoteName.prototype.prev = function() {
      return this.add(-1);
    };

    NoteName.prototype.disp_arabic = function() {
      return note_names_map[this.name];
    };

    return NoteName;

  })();

  window.NoteName = NoteName;

  window.SimpleNoteName = function(noteCode) {
    if (!noteCode) {
      return "";
    }
    return note_names_map[noteCode[0]];
  };

  maqam_names_map = {
    "ajem": "عجم",
    "ajem-ajem": "عجم",
    "kurd": "كرد",
    "kurd-kurd": "كرد",
    "nahawend": "نهاوند",
    "nahawend-kurd": "نهاوند",
    "nahawend-hijaz": "نهاوند حجاز",
    "hijaz": "حجاز",
    "hijaz-kurd": "حجاز",
    "hijaz-beyat": "حجاز بياتي",
    "hijazkar": "حجاز كار",
    "hijaz-hijaz": "حجاز كار",
    "rast": "رست",
    "rast-rast": "رست",
    "rast-nahawend": "رست نهاوند",
    "beyat": "بياتي",
    "beyat-kurd": "بياتي",
    "beyat-beyat": "حسيني",
    "saba": "صبا",
    "saba-zemzem": "صبا",
    "saba-full": "صبا كامل",
    "saba-kurd": "صبا كامل",
    "zemzem": "زمزمة",
    "zemzem-zemzem": "زمزمة",
    "zemzem-full": "زمزمة كامل",
    "zemzem-kurd": "زمزمة كامل",
    "full": "كامل",
    "u": "<span class='icon'>u</span>",
    "d": "<span class='icon'>d</span>"
  };

  ScaleArabicName = function(maqam_code) {
    var map, parts;
    map = maqam_names_map;
    if (!maqam_code) {
      return "";
    }
    if (maqam_code in map) {
      return map[maqam_code];
    } else if (maqam_code.has('-')) {
      parts = maqam_code.split('-').map(ScaleArabicName);
      return parts.join(' ');
    } else {
      return maqam_code;
    }
  };

  window.ScaleArabicName = ScaleArabicName;

  Jins = (function() {

    function Jins(name, p1, p2, p3) {
      var self;
      this.name = name;
      this.p1 = p1;
      this.p2 = p2;
      this.p3 = p3;
      self = this;
      self.disp_name = ko.computed(function() {
        return ScaleArabicName(self.name);
      });
      self.disp_intervals = ko.computed(function() {
        return "--";
      });
    }

    Jins.prototype.notes = function(base) {
      var interval, res, _i, _len, _ref;
      res = [base];
      _ref = [this.p1, this.p2, this.p3];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        interval = _ref[_i];
        res.push(base.addInterval(interval));
      }
      return res;
    };

    return Jins;

  })();

  window.ajnas = {};

  ajnas.ajem = new Jins('ajem', intervals.lesserTone, intervals.majorThird, intervals.forth);

  ajnas.kurd = new Jins('kurd', intervals.semiTone, intervals.minorThird, intervals.forth);

  ajnas.hijaz = new Jins('hijaz', intervals.semiTone, intervals.majorThird, intervals.forth);

  ajnas.nahawend = new Jins('nahawend', intervals.tone, intervals.minorThird, intervals.forth);

  ajnas.beyat = new Jins('beyat', intervals.neutralSecond, intervals.minorThird, intervals.forth);

  ajnas.rast = new Jins('rast', intervals.lesserTone, intervals.neutralThird, intervals.forth);

  ajnas.saba = new Jins('saba', intervals.neutralSecond, intervals.minorThird, intervals.diminishedForth);

  ajnas.zemzem = new Jins('zemzem', intervals.semiTone, intervals.minorThird, intervals.diminishedForth);

}).call(this);
