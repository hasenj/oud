div Web Oud

label Starting tone
  input#start(type="input", value="10", onkeyup="updkeys()")
label Scale
  input#scale(type="input", value="1 1 0.5 1 1 1 0.5", onkeyup="updkeys()")

#keys

:coffeescript
  fval = (id)-> $("#" + id).val() # field value
  window.keys = {}
  updkeys = () ->
    keys = "QWERTYUIOP[]"
    scale = fval("scale").match(/[\\d.]+/g)
    scale = scale.concat scale # hack for cycling
    tone = Number(fval("start"))
    $("#keys").text("")
    for key, index in keys
      bindkeytone(key, tone)
      # weird indentation bug!!
       tone += Number(scale[index % scale.length]) # cycling hack
  window.updkeys = _.debounce(updkeys, 400)

  bindhotkey = (key, downfn, upfn) ->
    shortcut.add(key, downfn)
    shortcut.add(key, upfn, {"type": "keyup"})

  bindkeytone = (key, tone) ->
      window.keys[key] = tone
      $("#keys").append("<div class='key' id='key_" + key + "'> " + key + " <br> " + tone)
      # TODO make the shortcut more dynamic: grab all keys and determine tone based on the key
      downfn = ()-> playkey(key)
      upfn = () -> liftkey(key)
      bindhotkey(key, downfn, upfn)

  getkeytone = (key) -> window.keys[key] # TODO convert to upper case first

  getkeydiv = (key) -> $("#key_" + key)

  playkey = (key) ->
    tone = getkeytone(key)
    if not tone 
      return
    getkeydiv(key).stop()
    getkeydiv(key).css("background-color", "hsl(200, 40%, 80%)")

  liftkey = (key) ->
    tone = getkeytone(key)
    if not tone 
      return
    getkeydiv(key).stop()
    getkeydiv(key).animate({"background-color": "white"}, 100)

  updkeys()

